<Application x:Class="QuizMastersApprenticeApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:QuizMastersApprenticeApp"
             xmlns:converters="clr-namespace:QuizMastersApprenticeApp.Converters"
             StartupUri="SelectDatabase.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/DataGridStyles.xaml" />
                <ResourceDictionary Source="Styles/ListBoxStyles.xaml" />
                <ResourceDictionary Source="Styles/ListViewStyles.xaml" />
                <ResourceDictionary Source="Styles/PracticeStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="BoolToVis" />
            <converters:BoolToCursorConverter x:Key="BoolToCursor" />
            <converters:SubtractVerticalScrollbarWidthConverter x:Key="SubtractVerticalScrollbarWidth" />

            <Style TargetType="{x:Type Window}">
                <Setter Property="FontFamily" Value="Arial" />
            </Style>

            <Style TargetType="{x:Type TextBlock}" x:Key="txtInfo">
                <Setter Property="Foreground" Value="DarkBlue"/>
                <Setter Property="FontSize" Value="14"/>
            </Style>

            <Style TargetType="{x:Type TextBlock}" x:Key="txtInfoBig">
                <Setter Property="Foreground" Value="DarkBlue"/>
                <Setter Property="FontSize" Value="20"/>
            </Style>

            <Style TargetType="{x:Type TextBlock}" x:Key="txtInfoBold">
                <Setter Property="Foreground" Value="Blue"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="14"/>
            </Style>

            <Style TargetType="{x:Type TextBlock}" x:Key="txtMainMenu">
                <Setter Property="Foreground" Value="DarkBlue"/>
                <Setter Property="FontSize" Value="18"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="Blue"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type TextBlock}" x:Key="txtNotes">
                <Setter Property="Foreground" Value="Blue"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>

            <Style TargetType="{x:Type Button}" x:Key="btnMainMenu">
                <Setter Property="Background" Value="#fff"/>
                <Setter Property="Foreground" Value="#000"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Margin" Value="10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="2" Padding="5" BorderBrush="#000">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                                </ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Blue"/>
                        <Setter Property="Foreground" Value="#fff"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="LightGray"/>
                        <Setter Property="Foreground" Value="Gray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Button}" x:Key="btnWizardNext">
                <Setter Property="Background" Value="#fff"/>
                <Setter Property="Foreground" Value="DarkTurquoise"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Margin" Value="4"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="2" Padding="5" BorderBrush="#000">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                                </ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Turquoise"/>
                        <Setter Property="Foreground" Value="#fff"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="LightGray"/>
                        <Setter Property="Foreground" Value="Gray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Button}" x:Key="btnAdd">
                <Setter Property="Background" Value="#fff"/>
                <Setter Property="Foreground" Value="DarkOrange"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Margin" Value="4"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="2" Padding="5" BorderBrush="#000">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                                </ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Orange"/>
                        <Setter Property="Foreground" Value="#fff"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="LightGray"/>
                        <Setter Property="Foreground" Value="Gray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Button}" x:Key="btnFunction">
                <Setter Property="Background" Value="#fff"/>
                <Setter Property="Foreground" Value="DarkBlue"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Margin" Value="4"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="2" Padding="5" BorderBrush="#000">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                                </ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Blue"/>
                        <Setter Property="Foreground" Value="#fff"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="LightGray"/>
                        <Setter Property="Foreground" Value="Gray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Button}" x:Key="btnDelete">
                <Setter Property="Background" Value="#fff"/>
                <Setter Property="Foreground" Value="DarkRed"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="4" BorderThickness="1" Padding="4,0" BorderBrush="#000">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                                </ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Red"/>
                        <Setter Property="Foreground" Value="#fff"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="LightGray"/>
                        <Setter Property="Foreground" Value="Gray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Button}" x:Key="btnRestore">
                <Setter Property="Background" Value="#fff"/>
                <Setter Property="Foreground" Value="DarkGreen"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="4" BorderThickness="1" Padding="4,0" BorderBrush="#000">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                                </ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Green"/>
                        <Setter Property="Foreground" Value="#fff"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="LightGray"/>
                        <Setter Property="Foreground" Value="Gray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Button}" x:Key="btnSave">
                <Setter Property="Background" Value="#fff"/>
                <Setter Property="Foreground" Value="DarkOrange"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="4" BorderThickness="1" Padding="2,0" BorderBrush="#000">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                                </ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="DarkOrange"/>
                        <Setter Property="Foreground" Value="#fff"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="LightGray"/>
                        <Setter Property="Foreground" Value="Gray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>            
            
            <Style TargetType="{x:Type Button}" x:Key="btnDrillDown">
                <Setter Property="Background" Value="#fff"/>
                <Setter Property="Foreground" Value="Indigo"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="4" BorderThickness="1" Padding="4,0" BorderBrush="#000">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                                </ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="BlueViolet"/>
                        <Setter Property="Foreground" Value="#fff"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="LightGray"/>
                        <Setter Property="Foreground" Value="Gray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
